@using UI.Models.Abstract
@model UI.Models.WcUserRoleModelView

@{
	ViewBag.Title = Model.Entity + " List";
	string spanClass = Model.Entity == WcEntity.Role ? "span3" : "span5";
}

<h2>@ViewBag.Title</h2>

<p>
	@Html.ActionLink("Create", "Edit", Model.Entity.ToString(), new { id = "0" }, null)
</p>

<div class="@spanClass">
	<table class="table table-striped">
		<thead>
			<tr>
				<th>
					Name
				</th>
				@if (Model.Entity == WcEntity.User)
				{
					<th>Password</th>
					<th>Email</th>
					<th>
						Role
					</th>
				}
				<th></th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@switch (Model.Entity)
			{
				case WcEntity.Role:

					foreach (var item in Model.RoleList)
					{
						<tr>
							<td>
								@Html.DisplayFor(modelItem => item.Name)

							</td>

							<td>
								@Html.ActionLink("Edit", "Edit", "WcRole", new { id = item.Id }, null)
							</td>
							<td>
								@if (item.CanDel)
								{
									@Html.ActionLink("Delete", "Delete", "WcRole", new { id = item.Id }, new { id = item.Id, returnUrl = Request.Url, onclick = string.Format("return confirm('{0}');", Resources.ConfirmDelete) })
								}
							</td>
						</tr>
					}

					break;
				case WcEntity.User:

					foreach (var item in Model.UserList)
					{
						<tr>
							<td>
								@Html.DisplayFor(modelItem => item.Name)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Password)
							</td>
							<td>@Html.DisplayFor(modelItem => item.Email)</td>
							<td>@Html.DisplayFor(modelItem => item.RoleName)</td>

							<td>
								@Html.ActionLink("Edit", "Edit", "WcUser", new { id = item.Id }, null)
							</td>
							<td>@Html.ActionLink("Delete", "Delete", "WcUser", new { id = item.Id }, new { id = item.Id, returnUrl = Request.Url, onclick = string.Format("return confirm('{0}');", Resources.ConfirmDelete) })</td>
						</tr>
					}

					break;
			}


		</tbody>
	</table>

</div>
