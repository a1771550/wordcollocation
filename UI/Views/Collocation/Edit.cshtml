@model UI.Models.CollocationViewModel

@{
	long collocationId = ViewBag.CollocationId ?? Model.Collocation.Id;
	ViewBag.Title = collocationId == 0 ? "Create" : "Edit";
	string action = User.IsInRole("Admin") ? "IndexForAdmin" : "IndexForEditor";
}

<div class="">
	<h2>@ViewBag.Title</h2>

	@if (ViewBag.ErrorMessage != null)
	{
		<p class="alert">ErrorMessage: @ViewBag.ErrorMessage</p>
	}
	@if (ViewBag.InnerMessage != null)
	{
		<p class="alert">ErrorMessage: @ViewBag.InnerMessage</p>
	}

	@if (ViewBag.IsDuplicatedEntry != null)
	{
		<p class="alert">ErrorMessage: @Resources.DuplicatedEntry</p>
	}

	@using (Html.BeginForm("Edit", "Collocation", FormMethod.Post, new { @class = "collocation-form" }))
	{
		@Html.AntiForgeryToken()
		@Html.Hidden("collocationId", collocationId)

		<div class="">
			<h4>Collocation</h4>
			<hr />
			@Html.ValidationSummary("", new { @class = "text-danger" })

			<div class="form-group">
				@Html.LabelFor(model => model.Pos, new { @class = "" })
				@Html.DropDownList("posId", Model.PosDropDownList)
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ColPos, new { @class = "" })

				@Html.DropDownList("colPosId", Model.ColPosDropDownList)

			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Word, new { @class = "" })

				@Html.DropDownList("wordId", Model.WordDropDownList)

			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ColWord, new { @class = "" })

				@Html.DropDownList("colWordId", Model.ColWordDropDownList)

			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.CollocationPattern, new { @class = "" })

				@Html.DropDownList("pattern", Model.CollocationPatternDropDownList)

			</div>

			<div class="form-group">

				<button type="submit">@ViewBag.Title</button>

			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", action)
	</div>
</div>


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		(function ($)
		{
			$("select:first").focus();
		})(jQuery);
	</script>
}
