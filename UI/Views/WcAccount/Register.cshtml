@model UI.Models.WcRegisterViewModel
@{
	ViewBag.Title = Resources.RegisterAsNewUser;
}

<style>
	/* Change the white to any color ;)-*/
	input:-webkit-autofill {
		-webkit-box-shadow: 0 0 0 1000px #f6f6ed inset;
	}
</style>


@*<div class="span5">*@
<div class="span4">
	<h3>@ViewBag.Title</h3>

	@using (Html.BeginForm("Register", "WcAccount", FormMethod.Post, new { id = "register-form", role = "form" }))
	{
		@Html.AntiForgeryToken()


		@Html.ValidationSummary(false)
		<p id="alert" class="text-danger"></p>


		<input type="hidden" id="duplicateEmail" value="@Resources.DuplicatedEmail" />
		<input type="hidden" id="duplicateName" value="@Resources.DuplicatedUserName" />
		<input type="hidden" id="invalid" value="@Resources.EmailFormatError" />
		<input type="hidden" id="pwdlength" value="@Resources.PasswordLengthError" />
		<input type="hidden" id="confirmPwdError" value="@Resources.ConfirmPasswordError" />


		<div class="form-group">
			@Html.TextBoxFor(m => m.Email, new { placeholder = Resources.Email, autocomplete = "off" }) <i class="glyphicons-icon circle_ok" id="emailOk"></i>
		</div>

		<div class="form-group">
			@Html.TextBoxFor(m => m.UserName, new { placeholder = Resources.UserName, autocomplete = "off" }) <i class="glyphicons-icon circle_ok" id="nameOk"></i>
		</div>

		<div class="form-group">
			@Html.PasswordFor(m => m.Password, new { placeholder = Resources.Password, autocomplete = "off" }) <i class="glyphicons-icon circle_ok" id="pwdOk"></i>
			<div class="text-smaller line-height-small">(@Resources.PasswordFormat)</div>
		</div>
		<div class="form-group">

			@Html.PasswordFor(m => m.ConfirmPassword, new { placeholder = Resources.ConfirmPassword, autocomplete = "off" }) <i class="glyphicons-icon circle_ok" id="confirmOk"></i>

		</div>
		<div class="form-group">

			<button type="submit">@Resources.Register</button>

		</div>
	}
</div>


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="/js/register.min.js"></script>
}