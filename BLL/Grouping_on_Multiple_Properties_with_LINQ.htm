
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head id="ctl00_ctl00_Head1"><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><link rel="alternate" type="application/rss+xml" title="BlackWasp Latest Additions" href="http://feeds.feedburner.com/BlackwaspLatestAdditions" /><link href="BlackWasp.css" rel="stylesheet" type="text/css" /><link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700,400italic" /><link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Oswald:700" /><link rel="stylesheet" type="text/css" href="shThemeDefault.css" /><link rel="stylesheet" type="text/css" href="shCore.css" />
<script type="text/javascript">var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-784824-7']); _gaq.push(['_trackPageview']); (function () { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })();</script>
<link href='http://www.blackwasp.co.uk/LinqMultiGrouping.aspx' rel='canonical' /><meta name="Description" content="LINQ allows queries to be executed that include grouping. The GroupBy query operator and the group clause both allow grouping using a single key selector. When it is necessary to group by multiple keys, the selector must include an expression." /><title>
	Grouping on Multiple Properties with LINQ
</title></head><body><form name="aspnetForm" method="post" action="Article.aspx?page=LinqMultiGrouping&amp;number=1" id="aspnetForm">
<div>
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKLTE3NjEzMzAxOGRk" />
</div>

<script type="text/javascript">
//<![CDATA[
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</script>


<div>

	<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="/wEWAwKeg4fsBAKN0vWUBwLt8PqaCQ==" />
</div>
<div class="wrapper"><div class="header"><a href="Default.aspx"><img src="template/Logo.png" width="218" height="90" alt="BlackWaspTM" style="border:none;float:left"/></a>
<div id="ctl00_ctl00_GB" class="gbanner"><script type="text/javascript"><!--
google_ad_client = "pub-3760328251384501";
/* Footer Leaderboard */
google_ad_slot = "9569760210";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script><script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script></div></div>
<div class="menu"><div class="menuitem"><a href="Default.aspx">Home</a></div><div class="menuitem"><a href="Articles.aspx">Articles</a></div><div class="menuitem"><a href="Tutorials.aspx">Tutorials</a></div><div class="menuitem"><a href="FAQ.aspx">FAQ</a></div><div class="menuitem"><a href="Contact.aspx">Contact</a></div><div class="menuitem"><a href="Newsletter.aspx">Newsletter</a></div><div id="ctl00_ctl00_SearchArea" class="searchbox"><input name="ctl00$ctl00$q" type="text" maxlength="512" id="ctl00_ctl00_q" class="searchtext" onkeypress="javascript:if (event.keyCode == 13) __doPostBack(&#39;ctl00$ctl00$SearchButton&#39;,&#39;&#39;)" /><a id="ctl00_ctl00_SearchButton" class="searchbutton" href="javascript:__doPostBack(&#39;ctl00$ctl00$SearchButton&#39;,&#39;&#39;)">Search</a></div></div>
<div class="shadow"></div><div class="content">
<div id="cookiebanner" style="background-color:Yellow;border:solid 1px #808080;border-radius:6px;box-shadow:3px 3px 3px gray;margin-bottom:15px"><p style="line-height:1em;margin:8px;padding:2px"><input type="button" style="float:right;margin-left:20px" onclick="document.getElementById('cookiebanner').style.display='none'" value="Hide"/>This web site uses cookies. By using the site you accept the <a href="Cookies.aspx">cookie policy</a>.<span style="display:block;font-size:85%">This message is for compliance with the <a href="http://www.ico.gov.uk/for_organisations/privacy_and_electronic_communications/the_guide/cookies.aspx" target="_blank">UK ICO law</a>.</span></p></div>
<div id="atdiv" class="addthis_toolbox addthis_default_style addthis_16x16_style"><a class="addthis_button_facebook_like"></a><a class="addthis_button_tweet"></a><a class="addthis_button_google_plusone_share"></a><a class="addthis_button_linkedin"></a><a class="addthis_button_stumbleupon"></a><a class="addthis_button_dotnetshoutout"></a><a class="addthis_button_dzone"></a><a class="addthis_button_email"></a><a class="addthis_button_favorites"></a></div>
<div class="community"><script type="text/javascript">var addthis_exclude = 'print,instapaper,pdfonline,pdfmyurl'</script>
<script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4e7e3bbe7900710e"></script></div>
<script type="text/javascript">var url = document.URL.split('#')[0];
var urlParts = url.split('_');
if (urlParts.length == 2) { url = urlParts[0] + ".aspx"; }
var titleParts = document.title.split('(');
if (titleParts.length == 1) { titleParts = title.split(':'); }
title = titleParts[0];
var atctl = document.getElementById('atdiv');
atctl.setAttribute("addthis:url", url);
atctl.setAttribute("addthis:title", title);</script>
<article><header><span class="articleicon"><img src='icons/Linq.png' alt='LINQ'/><br />.NET 3.5+</span><h1>Grouping on Multiple Properties with LINQ</h1><div class="author">by <a rel="author" href="https://profiles.google.com/113882985360066691734">Richard Carr</a>, published at <a id="ctl00_ctl00_PageContent_PageContent_PublishedAtLink" href="http://www.blackwasp.co.uk/LinqMultiGrouping.aspx">http://www.blackwasp.co.uk/LinqMultiGrouping.aspx</a></div><p><em>LINQ allows queries to be executed that include grouping. The GroupBy query operator and the group clause both allow grouping using a single key selector. When it is necessary to group by multiple keys, the selector must include an expression.</em></p></header>
<div id="ctl00_ctl00_PageContent_PageContent_GoogleRectangle_Live"><div class="gflt"><script type="text/javascript"><!--
google_ad_client = "pub-3760328251384501";
/* Inline Rectangle */
google_ad_slot = "1524970617";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div></div>
<h2>Grouping Data</h2>
<p>In the <a href="LinqToObjectsTutorial.aspx">LINQ to Objects tutorial</a> I described the <a href="LinqGrouping.aspx"><em>GroupBy</em> standard query operator and the <em>group</em> clause</a> of the query expression syntax. Each of these permits grouping of <a href="CollectionInterfaces.aspx">collections</a> that support the IEnumerable&lt;T&gt; <a href="Interfaces.aspx">interface</a>. In that article I briefly explained that you can create groups that are based upon multiple fields, <a href="CSharpClassProperties.aspx">properties</a> or expressions using an <a href="CSharpAnonTypes.aspx">anonymous type</a> in the key selector. In this article I will give some examples.</p>
<h3>Sample Data</h3>
<p>To demonstrate grouping on multiple properties we need a sample <a href="CSharpSimpleClass.aspx">class</a>. The class that we will use will include a product name, category and sub-category. The code for the class, which should be included in a console application, is as follows:</p>
<div class="code"><pre class="brush:csharp">public class Product
{
    public string Name { get; set; }
    public string Category { get; set; }
    public string Subcategory { get; set; }

    public Product(string category, string subcategory, string name)
    {
        Category = category;
        Subcategory = subcategory;
        Name = name;
    }
}</pre></div>
<p>We also need some sample data that includes multiple categories and subcategories. To create this data, add the following code to the Main method:</p>
<div class="code"><pre class="brush:csharp">var products = new List&lt;Product&gt;
{
    new Product("Food", "Fruit", "Apple"),
    new Product("Food", "Fruit", "Banana"),
    new Product("Food", "Fruit", "Orange"),
    new Product("Food", "Vegetables", "Carrot"),
    new Product("Food", "Vegetables", "Pea"),
    new Product("Drink", "Soft Drink", "Orange Juice"),
    new Product("Drink", "Soft Drink", "Lemonade"),
    new Product("Drink", "Alcoholic", "Bitter"),
    new Product("Drink", "Alcoholic", "Lager"),
    new Product("Drink", "Alcoholic", "Vodka")
};</pre></div>
<p>If you wish to group by both the category and the subcategory, you can combine the two values using an expression or an anonymous type for the key selector. In the following example an anonymous type is used.</p>
<div class="code"><pre class="brush:csharp">var grouped = products.GroupBy(p =&gt; new { p.Category, p.Subcategory });</pre></div>
<p>To show the results you must use two <a href="CSharpForEachLoop.aspx">loops</a>. An outer loop will output the group keys and a nested loop will show the products in each group:</p>
<div class="code"><pre class="brush:csharp">foreach (var group in grouped)
{
    Console.WriteLine(group.Key);
    foreach (var product in group)
    {
        Console.WriteLine("  {0}", product.Name);
    }
}

/* OUTPUT

{ Category = Food, Subcategory = Fruit }
  Apple
  Banana
  Orange
{ Category = Food, Subcategory = Vegetables }
  Carrot
  Pea
{ Category = Drink, Subcategory = Soft Drink }
  Orange Juice
  Lemonade
{ Category = Drink, Subcategory = Alcoholic }
  Bitter
  Lager
  Vodka

*/</pre></div>
<p>When outputting to the console in this manner, or for <a href="DebugWrite.aspx">logging to a text file</a>, it would be more useful to use an expression for the grouping. This can make the category names easier to read. For example:</p>
<div class="code"><pre class="brush:csharp">var grouped = products.GroupBy(p =&gt; string.Format("{0}/{1}", p.Category, p.Subcategory));

/* OUTPUT

Food/Fruit
  Apple
  Banana
  Orange
Food/Vegetables
  Carrot
  Pea
Drink/Soft Drink
  Orange Juice
  Lemonade
Drink/Alcoholic
  Bitter
  Lager
  Vodka

*/</pre></div>
<p>As you may expect, both of the above grouping queries can be represented using the query expression syntax. The equivalent queries are:</p>
<div class="code"><pre class="brush:csharp">var grouped =
    from p in products
    group p by new { p.Category, p.Subcategory };

var grouped =
    from p in products
    group p by string.Format("{0}/{1}", p.Category, p.Subcategory);</pre></div>

<div id="ctl00_ctl00_PageContent_PageContent_GoogleInLineBanner1_Live"><div class="gilb"><script type="text/javascript"><!--
google_ad_client = "pub-3760328251384501";
/* In-Line Banner */
google_ad_slot = "8345287419";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div></div><div class="editdate">31 July 2010</div></article>
<script src="shCore.js" type="text/javascript"></script>
<script src="shBrushCSharp.js" type="text/javascript"></script>
<script src="shBrushXml.js" type="text/javascript"></script>
<script src="shBrushSql.js" type="text/javascript"></script>
<script type="text/javascript">SyntaxHighlighter.defaults['gutter']=false;SyntaxHighlighter.defaults['quick-code']=false;SyntaxHighlighter.defaults['toolbar']=false;SyntaxHighlighter.defaults['auto-links']=false;SyntaxHighlighter.all();</script>
</div>
<div class="rnav"> 
<a href="http://feeds.feedburner.com/BlackwaspLatestAdditions" target="_blank"><img class="navcomm" src="template/rss.png" alt="RSS Feed"/></a><a href="http://twitter.com/BlackwaspUK" target="_blank"><img class="navcomm" src="template/Twitter.png" alt="Twitter"/></a><a href="https://profiles.google.com/113882985360066691734" target="_blank"><img class="navcomm" src="template/Google.png" alt="Google+"/></a><a href="http://www.facebook.com/BlackWaspUK" target="_blank"><img class="navcomm" src="template/Facebook.png" alt="Facebook"/></a><div class="rnavmenu"><a style="border-top:dotted 1px #C0C0C0;margin-top:8px" href="DotNetFrameworkArticles.aspx">.NET Framework</a><a href="AlgorithmsArticles.aspx">Algorithms and Data Structures</a><a href="AudioArticles.aspx">Audio</a><a href="CSharpArticles.aspx">C# Programming</a><a href="ConfigurationArticles.aspx">Configuration</a><a href="DebuggingArticles.aspx">Debugging</a><a href="DesignPatternsArticles.aspx">Design Patterns</a><a href="DocumentationArticles.aspx">Documentation</a><a href="GraphicsArticles.aspx">Graphics</a><a href="IOArticles.aspx">Input / Output</a><a href="LinqArticles.aspx">LINQ</a><a href="NetworkArticles.aspx">Network and Internet</a><a href="ParallelArticles.aspx">Parallel and Asynchronous</a><a href="PerformanceArticles.aspx">Performance</a><a href="ProgrammingConceptsArticles.aspx">Programming Concepts</a><a href="RefactoringArticles.aspx">Refactoring</a><a href="ReferenceSheetArticles.aspx">Reference Sheets</a><a href="ReflectionArticles.aspx">Reflection</a><a href="SecurityArticles.aspx">Security</a><a href="SQLArticles.aspx">SQL Server</a><a href="SystemInfoArticles.aspx">System Information</a><a href="TestingArticles.aspx">Testing</a><a href="ToolsArticles.aspx">Tools</a><a href="VSArticles.aspx">Visual Studio</a><a href="WindowsProgrammingArticles.aspx">Windows Programming</a><a href="WPFArticles.aspx">Windows Presentation Foundation</a><a href="XMLArticles.aspx">XML</a></div>
<div style="border-top:dotted 1px #C0C0C0" class="rnavpages"><a href="Copyright.aspx">©2006-<span id="ctl00_ctl00_CopyrightYearLabel">2014</span> BlackWasp<br />All Rights Reserved</a><a href="Cookies.aspx">Cookie Policy</a><a href="PrivacyPolicy.aspx">Privacy Policy</a><a href="TermsOfUse.aspx">Terms of Use</a></div></div><div class="footer"></div></div></form>
</body></html>